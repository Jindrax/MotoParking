/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Controladores.exceptions.NonexistentEntityException;
import Controladores.exceptions.PreexistingEntityException;
import Dialogos.RetiroDialogo;
import Negocio.CobroDiario;
import Negocio.Configuraciones;
import Negocio.Cupo;
import Negocio.CupoPK;
import Negocio.Locker;
import Negocio.Usuario;
import Negocio.UsuarioDiario;
import Utilidades.Auxi;
import static Utilidades.Auxi.selector;
import java.util.ArrayList;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Timer;
import java.util.TimerTask;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManager;
import javax.persistence.Query;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author santiago pc
 */
public class GUI extends javax.swing.JFrame {
    /**
     * Creates new form GUI
     */
    Map<Long, Cupo> cuposActivos = new HashMap<>();
    Cupo cupoActual = null;
    
    private void inicializarTablaDiario(){
        EntityManager em = Conection.getEmf().createEntityManager();
        Query query = em.createQuery("select c from Cupo c where c.salida is NULL");
        List<Cupo> cupos = query.getResultList();
        String[] columnas = {"#", "Placa", "Ingreso", "Locker", "Cascos", "Tiempo", "Cobro",  "Entradas"};
        Object[][] campos = new Object[cupos.size()][columnas.length];
        int i=0;
        for(Cupo cupo: cupos){
            campos[i][0] = cupo;
            campos[i][1] = cupo.getPlaca().getPlaca();
            campos[i][2] = Auxi.formaterHora(cupo.getCupoPK().getIngreso());
            if(cupo.getLocker()==null){
                campos[i][3] = "Ninguno";
                campos[i][4] = "-";
            }else{
                campos[i][3] = cupo.getLocker();
                campos[i][4] = cupo.getLocker().getAlojamiento();
            }
            campos[i][5] = "";
            campos[i][6] = "";
            campos[i][7] = cupo.getPlaca().getEntradas();
            i++;
            cuposActivos.put(cupo.getCupoPK().getConsecutivo(), cupo);
        }
        DefaultTableModel modelo = new DefaultTableModel(campos, columnas);
        tablaDiario.setModel(modelo);
    }
    
    public GUI() {
        initComponents();
        inicializarTablaDiario();
        Timer sincro = new Timer("sincro", true);
        TimerTask tareaSincro = new TimerTask() {
            @Override
            public void run() {
                mantenerTablaDiario();
            }
        };
        sincro.scheduleAtFixedRate(tareaSincro, 1000, 1000);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Contenedor = new javax.swing.JTabbedPane();
        panelDiario = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaDiario = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        placaDiario = new javax.swing.JTextField();
        cascosDiario = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        actionDiario = new javax.swing.JButton();
        panelMensual = new javax.swing.JPanel();
        panelAdmin = new javax.swing.JTabbedPane();
        panelLockers = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaLockers = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        idLocker = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        aloLocker = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        capLocker = new javax.swing.JTextField();
        actionLocker = new javax.swing.JButton();
        configPanel = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablaConfig = new javax.swing.JTable();
        valorConfig = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Contenedor.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                ContenedorComponentShown(evt);
            }
        });

        tablaDiario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tablaDiario);

        jLabel4.setText("Placa");

        placaDiario.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        placaDiario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                placaDiarioActionPerformed(evt);
            }
        });

        cascosDiario.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        cascosDiario.setText("0");
        cascosDiario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cascosDiarioActionPerformed(evt);
            }
        });

        jLabel5.setText("Cascos");

        actionDiario.setText("Registrar");
        actionDiario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actionDiarioActionPerformed(evt);
            }
        });
        actionDiario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                actionDiarioKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout panelDiarioLayout = new javax.swing.GroupLayout(panelDiario);
        panelDiario.setLayout(panelDiarioLayout);
        panelDiarioLayout.setHorizontalGroup(
            panelDiarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDiarioLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 570, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelDiarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelDiarioLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(placaDiario))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelDiarioLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cascosDiario, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelDiarioLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(actionDiario)))
                .addContainerGap())
        );
        panelDiarioLayout.setVerticalGroup(
            panelDiarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDiarioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelDiarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelDiarioLayout.createSequentialGroup()
                        .addGroup(panelDiarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(placaDiario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelDiarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(cascosDiario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(actionDiario)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 454, Short.MAX_VALUE))
                .addContainerGap())
        );

        Contenedor.addTab("Diario", panelDiario);

        javax.swing.GroupLayout panelMensualLayout = new javax.swing.GroupLayout(panelMensual);
        panelMensual.setLayout(panelMensualLayout);
        panelMensualLayout.setHorizontalGroup(
            panelMensualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 779, Short.MAX_VALUE)
        );
        panelMensualLayout.setVerticalGroup(
            panelMensualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 476, Short.MAX_VALUE)
        );

        Contenedor.addTab("Mensual", panelMensual);

        panelAdmin.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                panelAdminComponentShown(evt);
            }
        });

        jScrollPane2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jScrollPane2MouseClicked(evt);
            }
        });

        tablaLockers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaLockers.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaLockersMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tablaLockersMouseReleased(evt);
            }
        });
        jScrollPane2.setViewportView(tablaLockers);

        jLabel1.setText("Identificacion");

        jLabel2.setText("Alojamiento");

        jLabel3.setText("Capacidad");

        actionLocker.setText("jButton1");
        actionLocker.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actionLockerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(actionLocker, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(idLocker))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(aloLocker, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(capLocker, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(idLocker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(aloLocker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(capLocker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(actionLocker)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout panelLockersLayout = new javax.swing.GroupLayout(panelLockers);
        panelLockers.setLayout(panelLockersLayout);
        panelLockersLayout.setHorizontalGroup(
            panelLockersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLockersLayout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 490, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelLockersLayout.setVerticalGroup(
            panelLockersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 448, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        panelAdmin.addTab("Lockers", panelLockers);

        configPanel.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                configPanelComponentShown(evt);
            }
        });

        tablaConfig.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaConfig.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaConfigMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tablaConfig);

        valorConfig.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        valorConfig.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                valorConfigActionPerformed(evt);
            }
        });

        jLabel6.setText("Nuevo Valor");

        javax.swing.GroupLayout configPanelLayout = new javax.swing.GroupLayout(configPanel);
        configPanel.setLayout(configPanelLayout);
        configPanelLayout.setHorizontalGroup(
            configPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(configPanelLayout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 608, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(configPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(valorConfig)
                    .addGroup(configPanelLayout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(0, 92, Short.MAX_VALUE)))
                .addContainerGap())
        );
        configPanelLayout.setVerticalGroup(
            configPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 448, Short.MAX_VALUE)
            .addGroup(configPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addGap(8, 8, 8)
                .addComponent(valorConfig, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelAdmin.addTab("Configuracion", configPanel);

        Contenedor.addTab("Administracion", panelAdmin);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Contenedor)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Contenedor)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ContenedorComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_ContenedorComponentShown
        placaDiario.requestFocus();
    }//GEN-LAST:event_ContenedorComponentShown

    private void panelAdminComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_panelAdminComponentShown
        inicializarTablaLockers();
    }//GEN-LAST:event_panelAdminComponentShown

    private void jScrollPane2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPane2MouseClicked
        
    }//GEN-LAST:event_jScrollPane2MouseClicked

    private void tablaLockersMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaLockersMouseReleased
        
    }//GEN-LAST:event_tablaLockersMouseReleased

    private void tablaLockersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaLockersMouseClicked
        if (tablaLockers.getSelectedRow() != -1) {
            Locker locker = (Locker) tablaLockers.getValueAt(tablaLockers.getSelectedRow(), 0);
            idLocker.setText(locker.getIdentificador());
            aloLocker.setText(String.valueOf(locker.getAlojamiento()));
            capLocker.setText(String.valueOf(locker.getCapacidad()));
        }else{
            JOptionPane.showMessageDialog(null, "Seleccione un locker primero.");
        }    
    }//GEN-LAST:event_tablaLockersMouseClicked

    private void actionLockerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actionLockerActionPerformed
        Locker locker = Conection.getLocker().findLocker(idLocker.getText());
        if(locker == null){
            locker = new Locker(idLocker.getText(), Long.parseLong(aloLocker.getText()), Long.parseLong(capLocker.getText()));
            try {
                Conection.getLocker().create(locker);
            } catch (Exception ex) {
                Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
            locker.setIdentificador(idLocker.getText());
            locker.setAlojamiento(Long.parseLong(aloLocker.getText()));
            locker.setCapacidad(Long.parseLong(capLocker.getText()));
            try {
                Conection.getLocker().edit(locker);
            } catch (Exception ex) {
                Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_actionLockerActionPerformed

    private void actionDiarioProceso(){
        String ingreso = placaDiario.getText();        
        switch(selector(ingreso)){
            case 0:
                ingresoDiario();
                break;
            case 1:
                ingresoDiario();
                break;
            case 2:
                ingresoDiario();
                break;
            case 3:
                if(cuposActivos.containsKey(Long.parseLong(ingreso))){
                    Cupo cupo = cuposActivos.remove(Long.parseLong(ingreso));
                    retiroDiario(cupo);
                    new RetiroDialogo(this, rootPaneCheckingEnabled, cupo);
                    inicializarTablaDiario();
                }else{
                    JOptionPane.showMessageDialog(null, "Ese cupo no existe en el sistema.");
                }
                break;
            default:
                JOptionPane.showMessageDialog(null, "El ingreso no es un formato permitido.");
        }
        placaDiario.setText("");
        cascosDiario.setText("0");
        placaDiario.requestFocus();
    }
    
    private void actionDiarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actionDiarioActionPerformed
            actionDiarioProceso();
            inicializarTablaDiario();
    }//GEN-LAST:event_actionDiarioActionPerformed

    private void placaDiarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_placaDiarioActionPerformed
        switch(selector(placaDiario.getText())){
            case 1:
                cascosDiario.requestFocus();
                cascosDiario.selectAll();
                break;
            case 4:
                JOptionPane.showMessageDialog(null, "Entrada erronea.");
                placaDiario.requestFocus();
                placaDiario.selectAll();
                break;
            default:
                actionDiario.requestFocus();
                break;                
        }
    }//GEN-LAST:event_placaDiarioActionPerformed

    private void cascosDiarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cascosDiarioActionPerformed
        actionDiario.requestFocus();
    }//GEN-LAST:event_cascosDiarioActionPerformed

    private void actionDiarioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_actionDiarioKeyPressed
        actionDiarioProceso();
    }//GEN-LAST:event_actionDiarioKeyPressed

    private void configPanelComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_configPanelComponentShown
        inicializarTablaConfig();
    }//GEN-LAST:event_configPanelComponentShown

    private void tablaConfigMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaConfigMouseClicked
        
    }//GEN-LAST:event_tablaConfigMouseClicked

    private void valorConfigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_valorConfigActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_valorConfigActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane Contenedor;
    private javax.swing.JButton actionDiario;
    private javax.swing.JButton actionLocker;
    private javax.swing.JTextField aloLocker;
    private javax.swing.JTextField capLocker;
    private javax.swing.JTextField cascosDiario;
    private javax.swing.JPanel configPanel;
    private javax.swing.JTextField idLocker;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane panelAdmin;
    private javax.swing.JPanel panelDiario;
    private javax.swing.JPanel panelLockers;
    private javax.swing.JPanel panelMensual;
    private javax.swing.JTextField placaDiario;
    private javax.swing.JTable tablaConfig;
    private javax.swing.JTable tablaDiario;
    private javax.swing.JTable tablaLockers;
    private javax.swing.JTextField valorConfig;
    // End of variables declaration//GEN-END:variables

    private void inicializarTablaLockers() {
        EntityManager em = Conection.getEmf().createEntityManager();
        Query query = em.createQuery("select l from Locker l ORDER BY l.identificador");
        List<Locker> lockerList = query.getResultList();
        String[] columnas = {"Identificador", "Alojamiento", "Capacidad"};
        Object[][] campos =  new Object[lockerList.size()][columnas.length];
        int i = 0;
        for(Locker locker: lockerList){
            campos[i][0] = locker;
            campos[i][1] = locker.getAlojamiento();
            campos[i][2] = locker.getCapacidad();
            i++;
        }
        DefaultTableModel modelo = new DefaultTableModel(campos, columnas);
        tablaLockers.setModel(modelo);
    }
    
    private void inicializarTablaConfig() {
        EntityManager em = Conection.getEmf().createEntityManager();
        Query query = em.createQuery("select c from Configuraciones c");
        List<Configuraciones> confList = query.getResultList();
        String[] columnas = {"Descripcion", "Valor"};
        Object[][] campos =  new Object[confList.size()][columnas.length];
        int i = 0;
        for(Configuraciones conf: confList){
            campos[i][0] = conf;
            campos[i][1] = conf.getValor();
            i++;
        }
        DefaultTableModel modelo = new DefaultTableModel(campos, columnas);
        tablaConfig.setModel(modelo);
    }

    private void ingresoDiario() {
        String placa = placaDiario.getText().toUpperCase();
        int cascos = Integer.parseInt(cascosDiario.getText());
        UsuarioDiario usuario = Conection.getUsuarioDiario().findUsuarioDiario(placa);
        if (usuario == null) {
            Usuario usuarioGeneral = Conection.getUsuario().findUsuario(placa);
            if (usuarioGeneral == null) {
                usuarioGeneral = new Usuario(placa, "Moto");
                try {
                    Conection.getUsuario().create(usuarioGeneral);
                } catch (Exception ex) {
                    Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            usuario = new UsuarioDiario(placa, 0, 0, 0);
            usuario.setUsuario(usuarioGeneral);
            try {
                Conection.getUsuarioDiario().create(usuario);
            } catch (PreexistingEntityException ex) {
                Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
            } catch (Exception ex) {
                Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        long consecutivo = Long.parseLong(Conection.getConfiguraciones().findConfiguraciones("consecutivoDiario").getValor());
        Cupo cupo = new Cupo(new CupoPK(consecutivo, new GregorianCalendar().getTime()), 0, 0, 0);
        cupo.setPlaca(usuario);
        if(cascos>0){
            EntityManager em = Conection.getEmf().createEntityManager();
            Query query = em.createQuery("select l from Locker l where l.alojamiento = 0 and l.capacidad >= :capacidad ORDER BY l.identificador");
            query.setParameter("capacidad", cascos);
            List<Locker> lockers = query.getResultList();
            if(lockers.size()>0){
                Locker locker = lockers.get(0);
                locker.setAlojamiento(cascos);
                System.out.println("locker asignado: " + locker);
                try {
                    Conection.getLocker().edit(locker);
                } catch (Exception ex) {
                    Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
                }
                cupo.setLocker(locker);
            }
        }
        try {
            Conection.getCupo().create(cupo);
        } catch (Exception ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        consecutivo++;
        Configuraciones cons = Conection.getConfiguraciones().findConfiguraciones("consecutivoDiario");
        cons.setValor(String.valueOf(consecutivo));
        try {
            Conection.getConfiguraciones().edit(cons);
        } catch (Exception ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        inicializarTablaDiario();
    }

    private void retiroDiario(Cupo cupo) {
        cupo.setSalida(new GregorianCalendar().getTime());
        Auxi.calcularTiempoMoto(cupo);
        cupoActual = cupo;        
    }
    
    private void mantenerTablaDiario(){
        for(int i=0; i<tablaDiario.getRowCount(); i++){
            Cupo cupo = (Cupo)tablaDiario.getValueAt(i, 0);
            String valores[] = Auxi.calcularTiempoMotoTentativo(cupo);
            tablaDiario.setValueAt(valores[0], i, 5);
            tablaDiario.setValueAt(valores[1], i, 6);
        }
    }
}
